{"componentChunkName":"component---src-templates-post-jsx","path":"/docs/1.3.0/tutorial/create-our-first-microservice-javascript.html","result":{"data":{"markdownRemark":{"html":"<h1 id=\"create-our-first-microservice\" style=\"position:relative;\"><a href=\"#create-our-first-microservice\" aria-label=\"create our first microservice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Our First Microservice</h1>\n<h3 id=\"javascript-edition\" style=\"position:relative;\"><a href=\"#javascript-edition\" aria-label=\"javascript edition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript Edition</h3>\n<p><a href=\"https://nodejs.org/\">Node.js</a> is a JavaScript runtime built on Google Chrome's V8 JavaScript engine. In this step we're going to build a simple microservice using Node.js and the <a href=\"../writing-microservices/sdk.html\">ioFog SDK</a>.</p>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt> New to Node.js?</h3>\n  <p>This tutorial assumes a working knowledge of Node.js and modern JavaScript.</p>\n</aside>\n<h2 id=\"use-case\" style=\"position:relative;\"><a href=\"#use-case\" aria-label=\"use case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Case</h2>\n<p>To keep things fairly simple, we'll want to have our microservice do something interesting, but not particularly complex. To get a feel for the primary functions of the SDK, we want a microservice that:</p>\n<ol>\n<li>Uses dynamic configuration variables at runtime</li>\n<li>Takes input from another microservice</li>\n<li>Does some processing on it</li>\n<li>Outputs new data from the results</li>\n</ol>\n<p>Let's build a microservice that computes a real-time <a href=\"https://wikipedia.org/wiki/Moving_average\">moving average</a> from the input, which will send the result to any other microservices that might be listening. We'll also set up a dynamic configuration of the rolling window size. We can later change the configuration without needing to restart anything.</p>\n<p>If we're in a hurry, we can <a href=\"#the-final-moving-average-code\">skip ahead to the end</a>.</p>\n<h2 id=\"project-setup\" style=\"position:relative;\"><a href=\"#project-setup\" aria-label=\"project setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project Setup</h2>\n<p>Since we're going to be writing a new microservice, we'll need to create a project directory. Let's create it inside our tutorial's previous working directory that we should already be in.</p>\n<p>Let's name our project \"moving-average\" and create our service's <code class=\"language-text\">&quot;main&quot;</code> entry point.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> moving-average\n<span class=\"token builtin class-name\">cd</span> moving-average\n<span class=\"token function\">touch</span> index.js</code></pre>\n      </div>\n<p>We then run <code class=\"language-text\">npm init</code> to set up our default Node.js <code class=\"language-text\">package.json</code>, providing the answers to all its questions and setting <code class=\"language-text\">&quot;main&quot;: &quot;index.js&quot;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">npm init</code></pre>\n      </div>\n<p>Now we need to install the ioFog SDK for Node.js, which is published to NPM as <a href=\"https://www.npmjs.com/package/@iofog/nodejs-sdk\">@iofog/nodejs-sdk</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">npm install --save @iofog/nodejs-sdk</code></pre>\n      </div>\n<p>The <code class=\"language-text\">package.json</code> file should look something like this now:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"moving-average\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@iofog/nodejs-sdk\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"using-iofog-sdk\" style=\"position:relative;\"><a href=\"#using-iofog-sdk\" aria-label=\"using iofog sdk permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using ioFog SDK</h2>\n<p>Before we start writing the code for our microservice, lets take a look at the SDK's APIs.</p>\n<p>The <a href=\"https://github.com/ioFog/iofog-nodejs-sdk\">ioFog Node.js SDK</a> has a number of APIs, but in this tutorial we're most interested in these ones:</p>\n<ul>\n<li><a href=\"#iofoginit\"><code class=\"language-text\">iofog.init()</code></a></li>\n<li><a href=\"#iofoggetconfig\"><code class=\"language-text\">iofog.getConfig()</code></a></li>\n<li><a href=\"#iofogwscontrolconnection\"><code class=\"language-text\">iofog.wsControlConnection()</code></a></li>\n<li><a href=\"#iofogwsmessageconnection\"><code class=\"language-text\">iofog.wsMessageConnection()</code></a></li>\n<li><a href=\"#iofogiomessage--iofogwssendmessage\"><code class=\"language-text\">iofog.ioMessage()</code></a></li>\n<li><a href=\"#iofogiomessage--iofogwssendmessage\"><code class=\"language-text\">iofog.wsSendMessage()</code></a></li>\n</ul>\n<p>First, include the ioFog SDK in our index.js.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> iofog <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@iofog/nodejs-sdk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h4 id=\"iofoginit\" style=\"position:relative;\"><a href=\"#iofoginit\" aria-label=\"iofoginit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iofog.init()</h4>\n<aside class=\"notifications danger\">\n  <h3><img src=\"/images/icos/ico-danger.svg\" alt> Use this as our entry point</h3>\n  <p>The callback we provide should be treated for mostly as a pseudo entry point of our microservice. We have to make sure we don&apos;t call any SDK APIs before this function has been called!</p>\n</aside>\n<p>We now have to register a callback for ioFog once the ioFog SDK has finished initializing. It accepts a number of arguments, but we'll most likely want to pass these defaults. Here we register <code class=\"language-text\">main()</code> function as the init callback.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">iofog<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iofog'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54321</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> main<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>For the curious, the first argument is the host name of the <a href=\"../agents/local-api.html\">Agent's Local API</a>, the second is the port number of the SDK, and the third can be the container's ID, though it is not required.</p>\n<h4 id=\"iofoggetconfig\" style=\"position:relative;\"><a href=\"#iofoggetconfig\" aria-label=\"iofoggetconfig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iofog.getConfig()</h4>\n<p>Asynchronously fetch the microservice's current configuration (config). When it starts, the configuration of the microservice is only read once.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  iofog<span class=\"token punctuation\">.</span><span class=\"token function\">getConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onNewConfig</span><span class=\"token operator\">:</span> <span class=\"token parameter\">newConfig</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      config <span class=\"token operator\">=</span> newConfig<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onBadRequest</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateConfig failed: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateConfig failed: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h4 id=\"iofogwscontrolconnection\" style=\"position:relative;\"><a href=\"#iofogwscontrolconnection\" aria-label=\"iofogwscontrolconnection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iofog.wsControlConnection()</h4>\n<p>Note that when a configuration of a microservice changes, the Controller will send a message to the involved microservice.</p>\n<p>Therefore we have to connect the ioFog <em>control channel</em> via WebSocket, which is used to receive notifications from the Controller that our microservice's config has changed.</p>\n<p>Because a config can be any arbitrary JSON, including very large files, the change notifications themselves do not actually include the config. So if we would like to update our local cache of the config, we have to follow up a change notification with a call to <code class=\"language-text\">iofog.getConfig()</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">iofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsControlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">onNewConfigSignal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error with Control Connection: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h4 id=\"iofogwsmessageconnection\" style=\"position:relative;\"><a href=\"#iofogwsmessageconnection\" aria-label=\"iofogwsmessageconnection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iofog.wsMessageConnection()</h4>\n<p>Next, we have to connect to the ioFog <em>message channel</em> via WebSocket. This is where we'll receive any messages routed to this microservice from another.</p>\n<p>Under the hood, communication is brokered by our <a href=\"../connectors/overview.html\">Connector</a> and messages are routed according to that microservice's route settings on the Controller.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">iofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsMessageConnection</span><span class=\"token punctuation\">(</span>onMessageConnectionOpen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">onMessages</span><span class=\"token operator\">:</span> <span class=\"token parameter\">messages</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something with messages...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onMessageReceipt</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">messageId<span class=\"token punctuation\">,</span> timestamp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message receipt: '</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      messageId<span class=\"token punctuation\">,</span>\n      timestamp\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message WebSocket error: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h4 id=\"iofogiomessage--iofogwssendmessage\" style=\"position:relative;\"><a href=\"#iofogiomessage--iofogwssendmessage\" aria-label=\"iofogiomessage  iofogwssendmessage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iofog.ioMessage() / iofog.wsSendMessage()</h4>\n<p>Now that we can read control signals and message, we also need to send messages out with the actual moving average. We create and send ioMessages in JSON, which is the Node.js serialization format used for intercommunication between microservices.</p>\n<p>When our code wants to publish a message to any other microservice, these are what we'll be sending.</p>\n<p>There are a number of optional fields, but the most common are: <code class=\"language-text\">contentdata</code>, <code class=\"language-text\">infotype</code>, and <code class=\"language-text\">infoformat</code>. The <code class=\"language-text\">contentdata</code> field is the actual data payload we want to send, which needs to be provided as a string.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> iofog<span class=\"token punctuation\">.</span><span class=\"token function\">ioMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  contentdata<span class=\"token operator\">:</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  infotype<span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n  infoformat<span class=\"token operator\">:</span> <span class=\"token string\">'text/utf-8'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\niofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsSendMessage</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt> More about ioMessages?</h3>\n  <p>ioMessages can contain a number of options and fields not described here. To learn more, check out the <a href=\"../agents/local-api.html#iomessages\">Local API Reference</a>.</p>\n</aside>\n<h2 id=\"putting-the-moving-average-together\" style=\"position:relative;\"><a href=\"#putting-the-moving-average-together\" aria-label=\"putting the moving average together permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Putting The Moving Average Together</h2>\n<p>We're ready to start writing some code! First, lets open (or create) the <code class=\"language-text\">index.js</code> file we set as our <code class=\"language-text\">package.json</code> \"main\". This is where we'll place all of our code.</p>\n<p>Before we begin, let's review our goals for our moving average microservice:</p>\n<ol>\n<li>Window size should be configurable</li>\n<li>Take input from another microservice</li>\n<li>Compute a moving average on that input</li>\n<li>Output new data from the results</li>\n</ol>\n<p>We'll want to have our microservice expect a custom config with a <code class=\"language-text\">maxWindowSize</code> field telling us what the max size of our rolling window should be.</p>\n<p>To compute our real-time moving average, we can first create some utilities to compute an average from any array of numbers:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">values</span> <span class=\"token operator\">=></span> values<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">average</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">values</span> <span class=\"token operator\">=></span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns 32.4</span></code></pre>\n      </div>\n<p>In order to do a rolling window, we'll store incoming values in an array up until the point where a max window size is reached. After which we'll discard the oldest value, computing a new average each time.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Evict the oldest values once we've reached our max window size.</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> config<span class=\"token punctuation\">.</span>maxWindowSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// &lt;------- config</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>The Sensors microservice produces objects that look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"time\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1540855847710</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"speed\"</span><span class=\"token operator\">:</span> <span class=\"token number\">41.71445712</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"acceleration\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.52431\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"rpm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2078.3\"</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>What we'll do is produce an average for speed, acceleration, and rpm.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onMessages</span><span class=\"token operator\">:</span> <span class=\"token parameter\">messages</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>messages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> msg <span class=\"token keyword\">of</span> messages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>contentdata<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Produce moving averages for all the sensor values</span>\n      <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        isAverage<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        time<span class=\"token operator\">:</span> input<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">,</span> <span class=\"token comment\">// same time as</span>\n        speed<span class=\"token operator\">:</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span>prevSpeeds<span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        acceleration<span class=\"token operator\">:</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span>\n          prevAccelerations<span class=\"token punctuation\">,</span>\n          <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>acceleration<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        rpm<span class=\"token operator\">:</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span>prevRpms<span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>rpm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> iofog<span class=\"token punctuation\">.</span><span class=\"token function\">ioMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        contentdata<span class=\"token operator\">:</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        infotype<span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n        infoformat<span class=\"token operator\">:</span> <span class=\"token string\">'text/utf-8'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      iofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsSendMessage</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2 id=\"the-final-moving-average-code\" style=\"position:relative;\"><a href=\"#the-final-moving-average-code\" aria-label=\"the final moving average code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Final Moving Average Code</h2>\n<p>We now have everything we need to complete our microservice!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> iofog <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@iofog/nodejs-sdk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Used as our in-memory cache of our configuration</span>\n<span class=\"token comment\">// that will be provided by the Controller</span>\n<span class=\"token keyword\">let</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  maxWindowSize<span class=\"token operator\">:</span> <span class=\"token number\">150</span> <span class=\"token comment\">// Default value in case no config is provided</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  iofog<span class=\"token punctuation\">.</span><span class=\"token function\">getConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onNewConfig</span><span class=\"token operator\">:</span> <span class=\"token parameter\">newConfig</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      config <span class=\"token operator\">=</span> newConfig<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onBadRequest</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateConfig failed: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateConfig failed: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">values</span> <span class=\"token operator\">=></span> values<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">average</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">values</span> <span class=\"token operator\">=></span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Evict the oldest values once we've reached our max window size.</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> config<span class=\"token punctuation\">.</span>maxWindowSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// &lt;------- config</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// This is basically our \"entry point\", provided to iofog.init() below</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">updateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  iofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsControlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onNewConfigSignal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error with Control Connection: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onMessageConnectionOpen</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Listening for incoming messages'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Cache for our previous values received so we can compute our average</span>\n  <span class=\"token keyword\">const</span> prevSpeeds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> prevAccelerations <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> prevRpms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  iofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsMessageConnection</span><span class=\"token punctuation\">(</span>onMessageConnectionOpen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onMessages</span><span class=\"token operator\">:</span> <span class=\"token parameter\">messages</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>messages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> msg <span class=\"token keyword\">of</span> messages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>contentdata<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token comment\">// Produce moving averages for all the sensor values</span>\n          <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            isAverage<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            time<span class=\"token operator\">:</span> input<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">,</span> <span class=\"token comment\">// same time as</span>\n            speed<span class=\"token operator\">:</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span>prevSpeeds<span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            acceleration<span class=\"token operator\">:</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span>\n              prevAccelerations<span class=\"token punctuation\">,</span>\n              <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>acceleration<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            rpm<span class=\"token operator\">:</span> <span class=\"token function\">getMovingAverage</span><span class=\"token punctuation\">(</span>prevRpms<span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>rpm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> iofog<span class=\"token punctuation\">.</span><span class=\"token function\">ioMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            contentdata<span class=\"token operator\">:</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            infotype<span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n            infoformat<span class=\"token operator\">:</span> <span class=\"token string\">'text/utf-8'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          iofog<span class=\"token punctuation\">.</span><span class=\"token function\">wsSendMessage</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onMessageReceipt</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">messageId<span class=\"token punctuation\">,</span> timestamp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message receipt: '</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        messageId<span class=\"token punctuation\">,</span>\n        timestamp\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message WebSocket error: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\niofog<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iofog'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54321</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> main<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2 id=\"create-dockerfile\" style=\"position:relative;\"><a href=\"#create-dockerfile\" aria-label=\"create dockerfile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Dockerfile</h2>\n<p>We now to need to package up our code as a Docker image, so that we can deploy it in the next step. Docker images are created from instructions written in a Dockerfile.</p>\n<p>Like all build scripts, Dockerfiles can become a bit complex for advanced applications, but fortunately, ours is fairly simple:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">echo &quot;FROM node:8\nWORKDIR /moving-average\nCOPY ./package.json .\nRUN npm install --only=production\nCOPY index.js .\nCMD node .&quot; &gt; Dockerfile</code></pre>\n      </div>\n<p>In case you are not familiar with <a href=\"https://docs.docker.com/engine/reference/builder/\">Dockerfile</a>, here is a quick run down of the building steps:</p>\n<ol>\n<li>Use a <a href=\"https://hub.docker.com/_/node\">public base image</a> <code class=\"language-text\">node:8</code> to start with</li>\n<li>Set the image current working directory to <code class=\"language-text\">/moving-average</code></li>\n<li>Copy <code class=\"language-text\">package.json</code> from the current local folder into <code class=\"language-text\">/moving-average</code> inside the image</li>\n<li>Run <code class=\"language-text\">npm install --only=production</code>, which will install all required <code class=\"language-text\">node_modules</code> for production</li>\n<li>Copy <code class=\"language-text\">index.js</code> from the current local folder into <code class=\"language-text\">/moving-average</code> inside the image</li>\n<li>When a container is run using this image, start the container by running the following command <code class=\"language-text\">node .</code></li>\n</ol>\n<h2 id=\"build-our-docker-image\" style=\"position:relative;\"><a href=\"#build-our-docker-image\" aria-label=\"build our docker image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build Our Docker Image</h2>\n<p>With our Dockerfile setup, we can go ahead and build our image:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">docker build --tag iofog-tutorial/moving-average:v1 .\n\nSending build context to Docker daemon    7.8MB\nStep 1/6 : FROM node:8\n8: Pulling from library/node\n092586df9206: Pull complete\nef599477fae0: Pull complete\n4530c6472b5d: Pull complete\nd34d61487075: Pull complete\n87fc2710b63f: Pull complete\ne83c771c5387: Pull complete\n544e37709f92: Pull complete\n3aaf6653b5f3: Pull complete\n1fed50f6e111: Pull complete\nDigest: sha256:c00557b8634c74012eda82ac95f1813c9ea8c152a82f53ad71c5c9611f6f8c3c\nStatus: Downloaded newer image for node:8\n ---&gt; 7a9afc16a57f\nStep 2/6 : WORKDIR /moving-average\n ---&gt; Running in 640e44403abe\nRemoving intermediate container 640e44403abe\n ---&gt; 9b9c5c8036d5\nStep 3/6 : COPY ./package.json .\n ---&gt; ebe7bf4fd2cf\nStep 4/6 : RUN npm install --only=production\n ---&gt; Running in d2cd4b22f27e\nnpm WARN moving-average@1.0.0 No description\nnpm WARN moving-average@1.0.0 No repository field.\n\naudited 176 packages in 1.331s\nfound 9 vulnerabilities (6 moderate, 3 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container d2cd4b22f27e\n ---&gt; 7818facf5c9c\nStep 5/6 : COPY index.js .\n ---&gt; da965f5084b9\nStep 6/6 : CMD node .\n ---&gt; Running in 91a726deaea4\nRemoving intermediate container 91a726deaea4\n ---&gt; a1b78cc399d1\nSuccessfully built a1b78cc399d1\nSuccessfully tagged iofog-tutorial/moving-average:v1</code></pre>\n      </div>\n<p>We'll wait a few minutes while it downloads a default Node.js environment we're using as a base.</p>\n<p>Let's double check the images were successfully created. The image name and tag are important in the next step of the tutorial, where we are going to deploy the moving average service.</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">docker image ls --filter &#39;reference=*/moving-average&#39;\n\nREPOSITORY                      TAG                 IMAGE ID            CREATED             SIZE\niofog-tutorial/moving-average   v1                  5bf0943c4cd2        2 minutes ago       904MB</code></pre>\n      </div>\n<h2 id=\"deploy-our-microservice\" style=\"position:relative;\"><a href=\"#deploy-our-microservice\" aria-label=\"deploy our microservice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy Our Microservice</h2>\n<p>We now want to see this code in action, so let's go ahead and learn how to deploy this microservice to our ioFog tutorial environment.</p>\n<p><a href=\"deploy-our-microservice.html\">Continue To Next Step: Deploy Our Microservice</a>.</p>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt> Questions? Run into issues?</h3>\n  <p>If you ran into an issue, have a question, or just want to get plugged into the community, head over to our <a href=\"https://discuss.iofog.org/\">Discussion Forum</a>. We&apos;d love to have you!</p>\n</aside>","fields":{"slug":"/docs/1.3.0/tutorial/create-our-first-microservice-javascript.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}},{"title":"API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}},{"node":{"version":"1.1.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/overview.html"}}}},{"title":"SDK","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/cli-usage.html"}}}},{"title":"API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.1.0/"}}},{"node":{"version":"1.2.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/quick-start.html"}}}}]},{"title":"Remote Deployment","subMenus":[{"title":"Prepare Your Remote Hosts","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Prepare Your Network","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/prepare-your-network.html"}}}},{"title":"Setup Your Control Plane","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-your-controlplane.html"}}}},{"title":"Setup Your Agents","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-your-agents.html"}}}},{"title":"Setup All-in-one","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-all-in-one.html"}}}}]},{"title":"Tutorial: Developing and deploying microservices","subMenus":[{"title":"Introduction","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Introduction to iofogctl","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl/usage.html"}}}},{"title":"Iofogctl YAML Specification","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl/yaml-spec.html"}}}},{"title":"Platform Tools","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/platform-tools.html"}}}},{"title":"Helm Guide","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/how-to-helm.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/overview.html"}}}},{"title":"SDK","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/cli-usage.html"}}}},{"title":"API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/overview.html"}}}},{"title":"CLI Usage","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","description":null,"entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.2.0/"}}},{"node":{"version":"1.3.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","description":"iofog core concepts and introduction.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","description":"Getting started with iofog, iofogctl by deploying an ioFog local stack.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/quick-start.html"}}}},{"title":"Minikube and Vagrant, the Kubernetes local stack","description":"Getting started with iofog, iofogctl by deploying an ioFog local stack on Kubernetes minikube.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/minikube.html"}}}}]},{"title":"Platform Deployment","subMenus":[{"title":"Introduction","description":"Introduction to remote deployment of iofog using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/introduction.html"}}}},{"title":"Prepare Your Remote Hosts","description":"Set up remote hosts to be accessible by iofogctl in order to deploy iofog components","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Prepare Your Kubernetes Cluster","description":"Set up Kubernetes cluster to be accessible by iofogctl in order to deploy iofog components","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-kubernetes-cluster.html"}}}},{"title":"Prepare Your Network","description":"Set up ingress and outgress rules for iofog and iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-network.html"}}}},{"title":"Setup Your Control Plane","description":"How to deploy a control plane (ioFog Controller) using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-controlplane.html"}}}},{"title":"Setup Your Connectors","description":"How to deploy ioFog Connectors using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","description":"How to deploy ioFog Agents using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-agents.html"}}}}]},{"title":"Microservice Development and Deployment","subMenus":[{"title":"Introduction","description":"ioFog tutorial and demo of deploying microservices using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","description":"ioFog tutorial, what is in the ioFog stack ?","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","description":"ioFog tutorial, how to manage microservices using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","description":"ioFog tutorial, how to create an iofog microservice using the Javascript SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","description":"ioFog tutorial, how to deploy a microservice and/or an application using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"iofogctl","subMenus":[{"title":"Introduction to iofogctl","description":"Getting started with iofogctl. Overview of available commands like deploy, connect, namespaces, update, delete","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/usage.html"}}}},{"title":"Common Header YAML Specification","description":"iofogctl YAML structure. Common header, Kubernetes style","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/header.html"}}}},{"title":"Platform YAML Specification","description":"iofogctl YAML structure and specifications for platform (Controller, Connector and Agent)","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/platform-yaml-spec.html"}}}},{"title":"Agent configuration YAML Specification","description":"iofogctl YAML structure and specifications for configuring an ioFog Agent","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/agent-config-yaml-spec.html"}}}},{"title":"Application YAML Specification","description":"iofogctl YAML structure and specification for deploy an application","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/application-yaml-spec.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Platform Tools","description":"How to set up a complete infrastructure supporting iofog using Terraform","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tools/platform-tools.html"}}}},{"title":"Helm Guide","description":"How to set up a complete infrastructure running iofog using Helm","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tools/how-to-helm.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","description":"How to write and deploy an iofog microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/overview.html"}}}},{"title":"SDK","description":"iofog SDKs available to write microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","description":"How to debug an iofog microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/debugging.html"}}}}]},{"title":"Using Microservices Catalog","subMenus":[{"title":"Controller microservices overview","description":"What is iofog microservice catalog and how to use it.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/introduction.html"}}}},{"title":"System: Diagnostics","description":"Prebuilt iofog system microservice. Diagnostic basic functionalities on your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/diagnostics.html"}}}},{"title":"System: Hardware Abstraction Layer","description":"Prebuilt iofog system microservice. Hardware interactions on your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/hal.html"}}}},{"title":"System: Bluetooth REST API","description":"Prebuilt iofog system microservice. Enable/Disable bluetooth on your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/rest-blue.html"}}}},{"title":"JSON REST API And Open Weather Map","description":"Prebuilt iofog system microservice. Transform into JSON data generated by your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","description":"What is the ioFog Controller","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/overview.html"}}}},{"title":"Legacy CLI Usage","description":"How to use iofog-controller CLI","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","description":"ioFog Controller REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","description":"What is the ioFog Connector","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/overview.html"}}}},{"title":"Legacy CLI Usage","description":"How to use iofog-connector CLI","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/cli-usage.html"}}}},{"title":"API Reference","description":"ioFog Connector REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","description":"What is the ioFog Agent","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/overview.html"}}}},{"title":"Legacy CLI Usage","description":"How to use iofog-agent CLI","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","description":"ioFog Agent REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","description":"Guidelines to contributing to ioFog. How to contribute ?","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","description":"ioFog Code of Conduct for contributing","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.3.0/"}}},{"node":{"version":"v2","menus":[{"title":"Getting Started","subMenus":[{"title":"What's New in ioFog 2?","description":"List of features in ioFog 2 and their impact to users.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/getting-started/whats-new.html"}}}},{"title":"Core Concepts","description":"iofog core concepts and introduction.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/getting-started/core-concepts.html"}}}},{"title":"Architecture","description":"Overview of ioFog architecture.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/getting-started/architecture.html"}}}},{"title":"Quick Start With Local Deployment","description":"Getting started with iofog, iofogctl by deploying an ioFog local stack.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/getting-started/quick-start-local.html"}}}},{"title":"Quick Start On Minikube and Vagrant","description":"Getting started with iofog, iofogctl by deploying an ioFog local stack on Kubernetes minikube.","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/getting-started/quick-start-minikube.html"}}}}]},{"title":"iofogctl","subMenus":[{"title":"iofogctl - ioFog Unified Command Line Interface","description":"Getting started with iofogctl. Overview of available commands like deploy, connect, namespaces, update, delete","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/iofogctl/introduction.html"}}}},{"title":"Download And Install iofogctl","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/iofogctl/download.html"}}}},{"title":"Getting Familiar With iofogctl","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/iofogctl/getting-familiar.html"}}}},{"title":"iofogctl Resource Management","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/iofogctl/resource-management.html"}}}},{"title":"Connecting To Existing Edge Compute Networks","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/iofogctl/connect-disconnect.html"}}}},{"title":"Legacy Commands in iofogctl","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/iofogctl/legacy.html"}}}}]},{"title":"Platform Deployment","subMenus":[{"title":"Introduction","description":"Introduction to remote deployment of iofog using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/introduction.html"}}}},{"title":"Prepare Network","description":"Set up ingress and outgress rules for iofog and iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/prepare-your-network.html"}}}},{"title":"Prepare Remote Hosts","description":"Set up remote hosts to be accessible by iofogctl in order to deploy iofog Controller","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Remote - Deploy Control Plane","description":"Deploy ioFog Controller","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/remote-control-plane.html"}}}},{"title":"Kubernetes - Prepare A Cluster","description":"Set up Kubernetes cluster to be accessible by iofogctl in order to deploy iofog components","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/kubernetes-prepare-cluster.html"}}}},{"title":"Kubernetes - Deploy Control Plane Using iofogctl","description":"How to deploy a control plane (ioFog Controller) using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/kubernetes-iofogctl.html"}}}},{"title":"Kubernetes - Deploy Control Plane Using Helm","description":"How to deploy a control plane (ioFog Controller) using Helm","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/kubernetes-helm.html"}}}},{"title":"Setup Agents","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/platform-deployment/setup-your-agents.html"}}}}]},{"title":"Agent Management","subMenus":[{"title":"Introduction","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/agent-management/introduction.html"}}}},{"title":"Agent Configuration","description":"Getting started with iofogctl. Overview of available commands like deploy, connect, namespaces, update, delete","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/agent-management/agent-configuration.html"}}}},{"title":"Attach / Detach an Agent","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/agent-management/attach-detach.html"}}}},{"title":"Volume Management","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/agent-management/volumes.html"}}}},{"title":"Docker Image Pruning","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/agent-management/docker-image-pruning.html"}}}}]},{"title":"Developing Microservices","subMenus":[{"title":"Writing Microservices","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/developing-microservices/overview.html"}}}},{"title":"ioFog SDK","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/developing-microservices/sdk.html"}}}},{"title":"Debugging","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/developing-microservices/debugging.html"}}}}]},{"title":"Tutorial - Our First Microservice","subMenus":[{"title":"Introduction","description":"ioFog tutorial and demo of deploying microservices using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","description":"ioFog tutorial, what is in the ioFog stack ?","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Our Microservices","description":"ioFog tutorial, how to manage microservices using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/tutorial/manage-our-microservices.html"}}}},{"title":"Create Our First Microservice - JavaScript","description":"ioFog tutorial, how to create an iofog microservice using the Javascript SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Our Microservice","description":"ioFog tutorial, how to deploy a microservice and/or an application using iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Microservice Management","subMenus":[{"title":"Distributed Applications","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/microservices/applications.html"}}}},{"title":"Microservice Public Ports","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/microservices/microservice-exposing.html"}}}},{"title":"Move and Rename Microservices","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/microservices/microservice-move-rename.html"}}}},{"title":"Microservice Updates and Lifecycle","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/microservices/microservice-lifecycle-management.html"}}}},{"title":"Microservice Registry and Catalog Management","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/microservices/microservice-registry-catalog.html"}}}},{"title":"Microservice Logs","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/microservices/microservice-logs.html"}}}}]},{"title":"Reference - iofogctl","subMenus":[{"title":"Kinds of Resources","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-kinds.html"}}}},{"title":"Control Plane YAML Specification","description":"iofogctl YAML structure and specifications for platform (Controller and Agent)","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-control-plane.html"}}}},{"title":"Agent configuration YAML Specification","description":"iofogctl YAML structure and specifications for configuring an ioFog Agent","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-agent.html"}}}},{"title":"Application YAML Specification","description":"iofogctl YAML structure and specification for deploy an application","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-application.html"}}}},{"title":"Route YAML Specification","description":"iofogctl YAML structure and specification for deploying a route","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-route.html"}}}},{"title":"Catalog Item YAML Specification","description":"iofogctl YAML structure and specification for deploying a catalog item","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-catalog.html"}}}},{"title":"Registry YAML Specification","description":"iofogctl YAML structure and specification for deploying a registry","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-iofogctl/reference-registry.html"}}}}]},{"title":"Reference - Controller","subMenus":[{"title":"Overview","description":"What is the ioFog Controller","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-controller/overview.html"}}}},{"title":"Legacy Controller CLI Usage","description":"How to use iofog-controller CLI","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-controller/cli-usage.html"}}}},{"title":"Controller REST API Reference","description":"ioFog Controller REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-controller/rest-api.html"}}}}]},{"title":"Reference - Agent","subMenus":[{"title":"Overview","description":"What is the ioFog Agent","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-agent/overview.html"}}}},{"title":"Legacy Agent CLI Usage","description":"How to use iofog-agent CLI","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-agent/cli-usage.html"}}}},{"title":"Agent Local API Reference","description":"ioFog Agent REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-agent/rest-api.html"}}}},{"title":"Agent Configurations","description":"ioFog Agent Configurations","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-agent/configuration.html"}}}},{"title":"Remote debugging using IntelliJ","description":"","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-agent/debugging.html"}}}}]},{"title":"Reference - Catalog Microservices","subMenus":[{"title":"System: Diagnostics Microservice","description":"Prebuilt iofog system microservice. Diagnostic basic functionalities on your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-microserivces-catalog/diagnostics.html"}}}},{"title":"System: Hardware Abstraction Layer Microservice","description":"Prebuilt iofog system microservice. Hardware interactions on your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-microserivces-catalog/hal.html"}}}},{"title":"System: Bluetooth REST API Microservice","description":"Prebuilt iofog system microservice. Enable/Disable bluetooth on your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-microserivces-catalog/rest-blue.html"}}}},{"title":"JSON REST API And Open Weather Map Microservices","description":"Prebuilt iofog system microservice. Transform into JSON data generated by your edge device","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/reference-microserivces-catalog/jsonrestapi.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Contributing Guidelines","description":"Guidelines to contributing to ioFog. How to contribute ?","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/contributing/guidelines.html"}}}},{"title":"Code of Conduct","description":"ioFog Code of Conduct for contributing","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/2/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/2/"}}}]}},"pageContext":{"slug":"/docs/1.3.0/tutorial/create-our-first-microservice-javascript.html"}}}